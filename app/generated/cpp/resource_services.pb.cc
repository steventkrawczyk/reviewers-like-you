// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resource_services.proto

#include "resource_services.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace proto {
constexpr UploadReviewRequest::UploadReviewRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : review_(nullptr){}
struct UploadReviewRequestDefaultTypeInternal {
  constexpr UploadReviewRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UploadReviewRequestDefaultTypeInternal() {}
  union {
    UploadReviewRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UploadReviewRequestDefaultTypeInternal _UploadReviewRequest_default_instance_;
constexpr BatchUploadReviewRequest::BatchUploadReviewRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : reviewlist_(nullptr){}
struct BatchUploadReviewRequestDefaultTypeInternal {
  constexpr BatchUploadReviewRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BatchUploadReviewRequestDefaultTypeInternal() {}
  union {
    BatchUploadReviewRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BatchUploadReviewRequestDefaultTypeInternal _BatchUploadReviewRequest_default_instance_;
constexpr GetReviewsByAuthorRequest::GetReviewsByAuthorRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : author_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetReviewsByAuthorRequestDefaultTypeInternal {
  constexpr GetReviewsByAuthorRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetReviewsByAuthorRequestDefaultTypeInternal() {}
  union {
    GetReviewsByAuthorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetReviewsByAuthorRequestDefaultTypeInternal _GetReviewsByAuthorRequest_default_instance_;
constexpr GetAuthorsRequest::GetAuthorsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetAuthorsRequestDefaultTypeInternal {
  constexpr GetAuthorsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetAuthorsRequestDefaultTypeInternal() {}
  union {
    GetAuthorsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetAuthorsRequestDefaultTypeInternal _GetAuthorsRequest_default_instance_;
constexpr GetReviewsByAuthorResponse::GetReviewsByAuthorResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : reviewlist_(nullptr){}
struct GetReviewsByAuthorResponseDefaultTypeInternal {
  constexpr GetReviewsByAuthorResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetReviewsByAuthorResponseDefaultTypeInternal() {}
  union {
    GetReviewsByAuthorResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetReviewsByAuthorResponseDefaultTypeInternal _GetReviewsByAuthorResponse_default_instance_;
constexpr GetAuthorsResponse::GetAuthorsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : author_(){}
struct GetAuthorsResponseDefaultTypeInternal {
  constexpr GetAuthorsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetAuthorsResponseDefaultTypeInternal() {}
  union {
    GetAuthorsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetAuthorsResponseDefaultTypeInternal _GetAuthorsResponse_default_instance_;
constexpr UploadObjectRequest::UploadObjectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : bucketname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , objectname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , serializedobject_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UploadObjectRequestDefaultTypeInternal {
  constexpr UploadObjectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UploadObjectRequestDefaultTypeInternal() {}
  union {
    UploadObjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UploadObjectRequestDefaultTypeInternal _UploadObjectRequest_default_instance_;
constexpr DownloadObjectRequest::DownloadObjectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : bucketname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , objectname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DownloadObjectRequestDefaultTypeInternal {
  constexpr DownloadObjectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DownloadObjectRequestDefaultTypeInternal() {}
  union {
    DownloadObjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DownloadObjectRequestDefaultTypeInternal _DownloadObjectRequest_default_instance_;
constexpr DownloadObjectResponse::DownloadObjectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , found_(false){}
struct DownloadObjectResponseDefaultTypeInternal {
  constexpr DownloadObjectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DownloadObjectResponseDefaultTypeInternal() {}
  union {
    DownloadObjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DownloadObjectResponseDefaultTypeInternal _DownloadObjectResponse_default_instance_;
constexpr StatObjectRequest::StatObjectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : bucketname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , objectname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StatObjectRequestDefaultTypeInternal {
  constexpr StatObjectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StatObjectRequestDefaultTypeInternal() {}
  union {
    StatObjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StatObjectRequestDefaultTypeInternal _StatObjectRequest_default_instance_;
constexpr StatObjectResponse::StatObjectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : found_(false){}
struct StatObjectResponseDefaultTypeInternal {
  constexpr StatObjectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StatObjectResponseDefaultTypeInternal() {}
  union {
    StatObjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StatObjectResponseDefaultTypeInternal _StatObjectResponse_default_instance_;
constexpr UploadFileRequest::UploadFileRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , body_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UploadFileRequestDefaultTypeInternal {
  constexpr UploadFileRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UploadFileRequestDefaultTypeInternal() {}
  union {
    UploadFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UploadFileRequestDefaultTypeInternal _UploadFileRequest_default_instance_;
constexpr IngestReviewRequest::IngestReviewRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : review_(nullptr){}
struct IngestReviewRequestDefaultTypeInternal {
  constexpr IngestReviewRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~IngestReviewRequestDefaultTypeInternal() {}
  union {
    IngestReviewRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT IngestReviewRequestDefaultTypeInternal _IngestReviewRequest_default_instance_;
constexpr IngestBatchRequest::IngestBatchRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : filename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct IngestBatchRequestDefaultTypeInternal {
  constexpr IngestBatchRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~IngestBatchRequestDefaultTypeInternal() {}
  union {
    IngestBatchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT IngestBatchRequestDefaultTypeInternal _IngestBatchRequest_default_instance_;
constexpr UploadProjectionRequest::UploadProjectionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : projection_(nullptr)
  , movieindices_(nullptr){}
struct UploadProjectionRequestDefaultTypeInternal {
  constexpr UploadProjectionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UploadProjectionRequestDefaultTypeInternal() {}
  union {
    UploadProjectionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UploadProjectionRequestDefaultTypeInternal _UploadProjectionRequest_default_instance_;
constexpr AppendProjectionRequest::AppendProjectionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : projection_(nullptr){}
struct AppendProjectionRequestDefaultTypeInternal {
  constexpr AppendProjectionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AppendProjectionRequestDefaultTypeInternal() {}
  union {
    AppendProjectionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AppendProjectionRequestDefaultTypeInternal _AppendProjectionRequest_default_instance_;
constexpr DownloadProjectionRequest::DownloadProjectionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : shardid_(0){}
struct DownloadProjectionRequestDefaultTypeInternal {
  constexpr DownloadProjectionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DownloadProjectionRequestDefaultTypeInternal() {}
  union {
    DownloadProjectionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DownloadProjectionRequestDefaultTypeInternal _DownloadProjectionRequest_default_instance_;
constexpr DownloadMovieIndicesRequest::DownloadMovieIndicesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct DownloadMovieIndicesRequestDefaultTypeInternal {
  constexpr DownloadMovieIndicesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DownloadMovieIndicesRequestDefaultTypeInternal() {}
  union {
    DownloadMovieIndicesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DownloadMovieIndicesRequestDefaultTypeInternal _DownloadMovieIndicesRequest_default_instance_;
constexpr DownloadProjectionResponse::DownloadProjectionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : projection_(nullptr){}
struct DownloadProjectionResponseDefaultTypeInternal {
  constexpr DownloadProjectionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DownloadProjectionResponseDefaultTypeInternal() {}
  union {
    DownloadProjectionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DownloadProjectionResponseDefaultTypeInternal _DownloadProjectionResponse_default_instance_;
constexpr DownloadMovieIndicesResponse::DownloadMovieIndicesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : movieindices_(nullptr){}
struct DownloadMovieIndicesResponseDefaultTypeInternal {
  constexpr DownloadMovieIndicesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DownloadMovieIndicesResponseDefaultTypeInternal() {}
  union {
    DownloadMovieIndicesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DownloadMovieIndicesResponseDefaultTypeInternal _DownloadMovieIndicesResponse_default_instance_;
constexpr ShardCountRequest::ShardCountRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ShardCountRequestDefaultTypeInternal {
  constexpr ShardCountRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ShardCountRequestDefaultTypeInternal() {}
  union {
    ShardCountRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ShardCountRequestDefaultTypeInternal _ShardCountRequest_default_instance_;
constexpr ShardCountResponse::ShardCountResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : count_(0){}
struct ShardCountResponseDefaultTypeInternal {
  constexpr ShardCountResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ShardCountResponseDefaultTypeInternal() {}
  union {
    ShardCountResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ShardCountResponseDefaultTypeInternal _ShardCountResponse_default_instance_;
constexpr ManageResourceRequest::ManageResourceRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , action_(0)

  , resource_(0)
{}
struct ManageResourceRequestDefaultTypeInternal {
  constexpr ManageResourceRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ManageResourceRequestDefaultTypeInternal() {}
  union {
    ManageResourceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ManageResourceRequestDefaultTypeInternal _ManageResourceRequest_default_instance_;
}  // namespace proto
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_resource_5fservices_2eproto[23];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_resource_5fservices_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_resource_5fservices_2eproto = nullptr;

const uint32_t TableStruct_resource_5fservices_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::proto::UploadReviewRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::UploadReviewRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UploadReviewRequest, review_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::BatchUploadReviewRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::BatchUploadReviewRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::BatchUploadReviewRequest, reviewlist_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::GetReviewsByAuthorRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::GetReviewsByAuthorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetReviewsByAuthorRequest, author_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetAuthorsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetReviewsByAuthorResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::GetReviewsByAuthorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetReviewsByAuthorResponse, reviewlist_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetAuthorsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetAuthorsResponse, author_),
  PROTOBUF_FIELD_OFFSET(::proto::UploadObjectRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::UploadObjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UploadObjectRequest, bucketname_),
  PROTOBUF_FIELD_OFFSET(::proto::UploadObjectRequest, objectname_),
  PROTOBUF_FIELD_OFFSET(::proto::UploadObjectRequest, serializedobject_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::DownloadObjectRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::DownloadObjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DownloadObjectRequest, bucketname_),
  PROTOBUF_FIELD_OFFSET(::proto::DownloadObjectRequest, objectname_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::DownloadObjectResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::DownloadObjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DownloadObjectResponse, found_),
  PROTOBUF_FIELD_OFFSET(::proto::DownloadObjectResponse, data_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::StatObjectRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::StatObjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::StatObjectRequest, bucketname_),
  PROTOBUF_FIELD_OFFSET(::proto::StatObjectRequest, objectname_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::StatObjectResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::StatObjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::StatObjectResponse, found_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::UploadFileRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::UploadFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UploadFileRequest, name_),
  PROTOBUF_FIELD_OFFSET(::proto::UploadFileRequest, body_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::IngestReviewRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::IngestReviewRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::IngestReviewRequest, review_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::IngestBatchRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::IngestBatchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::IngestBatchRequest, filename_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::UploadProjectionRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::UploadProjectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UploadProjectionRequest, projection_),
  PROTOBUF_FIELD_OFFSET(::proto::UploadProjectionRequest, movieindices_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::AppendProjectionRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::AppendProjectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::AppendProjectionRequest, projection_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::DownloadProjectionRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::DownloadProjectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DownloadProjectionRequest, shardid_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DownloadMovieIndicesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DownloadProjectionResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::DownloadProjectionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DownloadProjectionResponse, projection_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::DownloadMovieIndicesResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::DownloadMovieIndicesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DownloadMovieIndicesResponse, movieindices_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ShardCountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ShardCountResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::ShardCountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ShardCountResponse, count_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::ManageResourceRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::ManageResourceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ManageResourceRequest, name_),
  PROTOBUF_FIELD_OFFSET(::proto::ManageResourceRequest, action_),
  PROTOBUF_FIELD_OFFSET(::proto::ManageResourceRequest, resource_),
  0,
  1,
  2,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, -1, sizeof(::proto::UploadReviewRequest)},
  { 8, 15, -1, sizeof(::proto::BatchUploadReviewRequest)},
  { 16, 23, -1, sizeof(::proto::GetReviewsByAuthorRequest)},
  { 24, -1, -1, sizeof(::proto::GetAuthorsRequest)},
  { 30, 37, -1, sizeof(::proto::GetReviewsByAuthorResponse)},
  { 38, -1, -1, sizeof(::proto::GetAuthorsResponse)},
  { 45, 54, -1, sizeof(::proto::UploadObjectRequest)},
  { 57, 65, -1, sizeof(::proto::DownloadObjectRequest)},
  { 67, 75, -1, sizeof(::proto::DownloadObjectResponse)},
  { 77, 85, -1, sizeof(::proto::StatObjectRequest)},
  { 87, 94, -1, sizeof(::proto::StatObjectResponse)},
  { 95, 103, -1, sizeof(::proto::UploadFileRequest)},
  { 105, 112, -1, sizeof(::proto::IngestReviewRequest)},
  { 113, 120, -1, sizeof(::proto::IngestBatchRequest)},
  { 121, 129, -1, sizeof(::proto::UploadProjectionRequest)},
  { 131, 138, -1, sizeof(::proto::AppendProjectionRequest)},
  { 139, 146, -1, sizeof(::proto::DownloadProjectionRequest)},
  { 147, -1, -1, sizeof(::proto::DownloadMovieIndicesRequest)},
  { 153, 160, -1, sizeof(::proto::DownloadProjectionResponse)},
  { 161, 168, -1, sizeof(::proto::DownloadMovieIndicesResponse)},
  { 169, -1, -1, sizeof(::proto::ShardCountRequest)},
  { 175, 182, -1, sizeof(::proto::ShardCountResponse)},
  { 183, 192, -1, sizeof(::proto::ManageResourceRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_UploadReviewRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_BatchUploadReviewRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_GetReviewsByAuthorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_GetAuthorsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_GetReviewsByAuthorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_GetAuthorsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_UploadObjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_DownloadObjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_DownloadObjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_StatObjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_StatObjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_UploadFileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_IngestReviewRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_IngestBatchRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_UploadProjectionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_AppendProjectionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_DownloadProjectionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_DownloadMovieIndicesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_DownloadProjectionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_DownloadMovieIndicesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_ShardCountRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_ShardCountResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_ManageResourceRequest_default_instance_),
};

const char descriptor_table_protodef_resource_5fservices_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027resource_services.proto\022\005proto\032\014common"
  ".proto\032\020data_model.proto\"D\n\023UploadReview"
  "Request\022\"\n\006review\030\001 \001(\0132\r.proto.ReviewH\000"
  "\210\001\001B\t\n\007_review\"U\n\030BatchUploadReviewReque"
  "st\022*\n\nreviewList\030\001 \001(\0132\021.proto.ReviewLis"
  "tH\000\210\001\001B\r\n\013_reviewList\";\n\031GetReviewsByAut"
  "horRequest\022\023\n\006author\030\001 \001(\tH\000\210\001\001B\t\n\007_auth"
  "or\"\023\n\021GetAuthorsRequest\"W\n\032GetReviewsByA"
  "uthorResponse\022*\n\nreviewList\030\001 \001(\0132\021.prot"
  "o.ReviewListH\000\210\001\001B\r\n\013_reviewList\"$\n\022GetA"
  "uthorsResponse\022\016\n\006author\030\001 \003(\t\"\231\001\n\023Uploa"
  "dObjectRequest\022\027\n\nbucketName\030\001 \001(\tH\000\210\001\001\022"
  "\027\n\nobjectName\030\002 \001(\tH\001\210\001\001\022\035\n\020serializedOb"
  "ject\030\003 \001(\tH\002\210\001\001B\r\n\013_bucketNameB\r\n\013_objec"
  "tNameB\023\n\021_serializedObject\"g\n\025DownloadOb"
  "jectRequest\022\027\n\nbucketName\030\001 \001(\tH\000\210\001\001\022\027\n\n"
  "objectName\030\002 \001(\tH\001\210\001\001B\r\n\013_bucketNameB\r\n\013"
  "_objectName\"R\n\026DownloadObjectResponse\022\022\n"
  "\005found\030\001 \001(\010H\000\210\001\001\022\021\n\004data\030\002 \001(\tH\001\210\001\001B\010\n\006"
  "_foundB\007\n\005_data\"c\n\021StatObjectRequest\022\027\n\n"
  "bucketName\030\001 \001(\tH\000\210\001\001\022\027\n\nobjectName\030\002 \001("
  "\tH\001\210\001\001B\r\n\013_bucketNameB\r\n\013_objectName\"2\n\022"
  "StatObjectResponse\022\022\n\005found\030\001 \001(\010H\000\210\001\001B\010"
  "\n\006_found\"K\n\021UploadFileRequest\022\021\n\004name\030\001 "
  "\001(\tH\000\210\001\001\022\021\n\004body\030\002 \001(\014H\001\210\001\001B\007\n\005_nameB\007\n\005"
  "_body\"D\n\023IngestReviewRequest\022\"\n\006review\030\001"
  " \001(\0132\r.proto.ReviewH\000\210\001\001B\t\n\007_review\"8\n\022I"
  "ngestBatchRequest\022\025\n\010filename\030\001 \001(\tH\000\210\001\001"
  "B\013\n\t_filename\"\225\001\n\027UploadProjectionReques"
  "t\022*\n\nprojection\030\001 \001(\0132\021.proto.Projection"
  "H\000\210\001\001\022.\n\014movieIndices\030\002 \001(\0132\023.proto.Movi"
  "eIndicesH\001\210\001\001B\r\n\013_projectionB\017\n\r_movieIn"
  "dices\"T\n\027AppendProjectionRequest\022*\n\nproj"
  "ection\030\001 \001(\0132\021.proto.ProjectionH\000\210\001\001B\r\n\013"
  "_projection\"=\n\031DownloadProjectionRequest"
  "\022\024\n\007shardId\030\001 \001(\005H\000\210\001\001B\n\n\010_shardId\"\035\n\033Do"
  "wnloadMovieIndicesRequest\"W\n\032DownloadPro"
  "jectionResponse\022*\n\nprojection\030\001 \001(\0132\021.pr"
  "oto.ProjectionH\000\210\001\001B\r\n\013_projection\"_\n\034Do"
  "wnloadMovieIndicesResponse\022.\n\014movieIndic"
  "es\030\001 \001(\0132\023.proto.MovieIndicesH\000\210\001\001B\017\n\r_m"
  "ovieIndices\"\023\n\021ShardCountRequest\"2\n\022Shar"
  "dCountResponse\022\022\n\005count\030\001 \001(\005H\000\210\001\001B\010\n\006_c"
  "ount\"\227\001\n\025ManageResourceRequest\022\021\n\004name\030\001"
  " \001(\tH\000\210\001\001\022\"\n\006action\030\002 \001(\0162\r.proto.Action"
  "H\001\210\001\001\022&\n\010resource\030\003 \001(\0162\017.proto.Resource"
  "H\002\210\001\001B\007\n\005_nameB\t\n\007_actionB\013\n\t_resource* "
  "\n\006Action\022\n\n\006CREATE\020\000\022\n\n\006DELETE\020\001*!\n\010Reso"
  "urce\022\t\n\005TABLE\020\000\022\n\n\006BUCKET\020\0012\266\002\n\024MainData"
  "storeService\022:\n\014UploadReview\022\032.proto.Upl"
  "oadReviewRequest\032\016.proto.Payload\022D\n\021Batc"
  "hUploadReview\022\037.proto.BatchUploadReviewR"
  "equest\032\016.proto.Payload\022Y\n\022GetReviewsByAu"
  "thor\022 .proto.GetReviewsByAuthorRequest\032!"
  ".proto.GetReviewsByAuthorResponse\022A\n\nGet"
  "Authors\022\030.proto.GetAuthorsRequest\032\031.prot"
  "o.GetAuthorsResponse2\340\001\n\020FilestoreServic"
  "e\022:\n\014UploadObject\022\032.proto.UploadObjectRe"
  "quest\032\016.proto.Payload\022M\n\016DownloadObject\022"
  "\034.proto.DownloadObjectRequest\032\035.proto.Do"
  "wnloadObjectResponse\022A\n\nStatObject\022\030.pro"
  "to.StatObjectRequest\032\031.proto.StatObjectR"
  "esponse2\221\001\n\025DatastoreAdminService\022>\n\016Man"
  "ageResource\022\034.proto.ManageResourceReques"
  "t\032\016.proto.Payload\0228\n\013CheckHealth\022\031.proto"
  ".HealthCheckRequest\032\016.proto.Payload2\302\001\n\020"
  "IngestionService\022:\n\014IngestReview\022\032.proto"
  ".IngestReviewRequest\032\016.proto.Payload\0228\n\013"
  "IngestBatch\022\031.proto.IngestBatchRequest\032\016"
  ".proto.Payload\0228\n\013CheckHealth\022\031.proto.He"
  "althCheckRequest\032\016.proto.Payload2\201\001\n\rUpl"
  "oadService\0226\n\nUploadFile\022\030.proto.UploadF"
  "ileRequest\032\016.proto.Payload\0228\n\013CheckHealt"
  "h\022\031.proto.HealthCheckRequest\032\016.proto.Pay"
  "load2\335\003\n\032ProjectionDatastoreService\022B\n\020U"
  "ploadProjection\022\036.proto.UploadProjection"
  "Request\032\016.proto.Payload\022B\n\020AppendProject"
  "ion\022\036.proto.AppendProjectionRequest\032\016.pr"
  "oto.Payload\022Y\n\022DownloadProjection\022 .prot"
  "o.DownloadProjectionRequest\032!.proto.Down"
  "loadProjectionResponse\022_\n\024DownloadMovieI"
  "ndices\022\".proto.DownloadMovieIndicesReque"
  "st\032#.proto.DownloadMovieIndicesResponse\022"
  "A\n\nShardCount\022\030.proto.ShardCountRequest\032"
  "\031.proto.ShardCountResponse\0228\n\013CheckHealt"
  "h\022\031.proto.HealthCheckRequest\032\016.proto.Pay"
  "loadB\030Z\026app/generated/go/protob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_resource_5fservices_2eproto_deps[2] = {
  &::descriptor_table_common_2eproto,
  &::descriptor_table_data_5fmodel_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_resource_5fservices_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_resource_5fservices_2eproto = {
  false, false, 3478, descriptor_table_protodef_resource_5fservices_2eproto, "resource_services.proto", 
  &descriptor_table_resource_5fservices_2eproto_once, descriptor_table_resource_5fservices_2eproto_deps, 2, 23,
  schemas, file_default_instances, TableStruct_resource_5fservices_2eproto::offsets,
  file_level_metadata_resource_5fservices_2eproto, file_level_enum_descriptors_resource_5fservices_2eproto, file_level_service_descriptors_resource_5fservices_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_resource_5fservices_2eproto_getter() {
  return &descriptor_table_resource_5fservices_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_resource_5fservices_2eproto(&descriptor_table_resource_5fservices_2eproto);
namespace proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Action_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_resource_5fservices_2eproto);
  return file_level_enum_descriptors_resource_5fservices_2eproto[0];
}
bool Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Resource_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_resource_5fservices_2eproto);
  return file_level_enum_descriptors_resource_5fservices_2eproto[1];
}
bool Resource_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class UploadReviewRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UploadReviewRequest>()._has_bits_);
  static const ::proto::Review& review(const UploadReviewRequest* msg);
  static void set_has_review(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::proto::Review&
UploadReviewRequest::_Internal::review(const UploadReviewRequest* msg) {
  return *msg->review_;
}
void UploadReviewRequest::clear_review() {
  if (review_ != nullptr) review_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
UploadReviewRequest::UploadReviewRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.UploadReviewRequest)
}
UploadReviewRequest::UploadReviewRequest(const UploadReviewRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_review()) {
    review_ = new ::proto::Review(*from.review_);
  } else {
    review_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.UploadReviewRequest)
}

inline void UploadReviewRequest::SharedCtor() {
review_ = nullptr;
}

UploadReviewRequest::~UploadReviewRequest() {
  // @@protoc_insertion_point(destructor:proto.UploadReviewRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UploadReviewRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete review_;
}

void UploadReviewRequest::ArenaDtor(void* object) {
  UploadReviewRequest* _this = reinterpret_cast< UploadReviewRequest* >(object);
  (void)_this;
}
void UploadReviewRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UploadReviewRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UploadReviewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UploadReviewRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(review_ != nullptr);
    review_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadReviewRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .proto.Review review = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_review(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UploadReviewRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UploadReviewRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .proto.Review review = 1;
  if (_internal_has_review()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::review(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UploadReviewRequest)
  return target;
}

size_t UploadReviewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UploadReviewRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto.Review review = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *review_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadReviewRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UploadReviewRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadReviewRequest::GetClassData() const { return &_class_data_; }

void UploadReviewRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UploadReviewRequest *>(to)->MergeFrom(
      static_cast<const UploadReviewRequest &>(from));
}


void UploadReviewRequest::MergeFrom(const UploadReviewRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UploadReviewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_review()) {
    _internal_mutable_review()->::proto::Review::MergeFrom(from._internal_review());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadReviewRequest::CopyFrom(const UploadReviewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UploadReviewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadReviewRequest::IsInitialized() const {
  return true;
}

void UploadReviewRequest::InternalSwap(UploadReviewRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(review_, other->review_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadReviewRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[0]);
}

// ===================================================================

class BatchUploadReviewRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<BatchUploadReviewRequest>()._has_bits_);
  static const ::proto::ReviewList& reviewlist(const BatchUploadReviewRequest* msg);
  static void set_has_reviewlist(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::proto::ReviewList&
BatchUploadReviewRequest::_Internal::reviewlist(const BatchUploadReviewRequest* msg) {
  return *msg->reviewlist_;
}
void BatchUploadReviewRequest::clear_reviewlist() {
  if (reviewlist_ != nullptr) reviewlist_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
BatchUploadReviewRequest::BatchUploadReviewRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.BatchUploadReviewRequest)
}
BatchUploadReviewRequest::BatchUploadReviewRequest(const BatchUploadReviewRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_reviewlist()) {
    reviewlist_ = new ::proto::ReviewList(*from.reviewlist_);
  } else {
    reviewlist_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.BatchUploadReviewRequest)
}

inline void BatchUploadReviewRequest::SharedCtor() {
reviewlist_ = nullptr;
}

BatchUploadReviewRequest::~BatchUploadReviewRequest() {
  // @@protoc_insertion_point(destructor:proto.BatchUploadReviewRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BatchUploadReviewRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete reviewlist_;
}

void BatchUploadReviewRequest::ArenaDtor(void* object) {
  BatchUploadReviewRequest* _this = reinterpret_cast< BatchUploadReviewRequest* >(object);
  (void)_this;
}
void BatchUploadReviewRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BatchUploadReviewRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BatchUploadReviewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BatchUploadReviewRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(reviewlist_ != nullptr);
    reviewlist_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchUploadReviewRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .proto.ReviewList reviewList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_reviewlist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BatchUploadReviewRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.BatchUploadReviewRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .proto.ReviewList reviewList = 1;
  if (_internal_has_reviewlist()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::reviewlist(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BatchUploadReviewRequest)
  return target;
}

size_t BatchUploadReviewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BatchUploadReviewRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto.ReviewList reviewList = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reviewlist_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BatchUploadReviewRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BatchUploadReviewRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BatchUploadReviewRequest::GetClassData() const { return &_class_data_; }

void BatchUploadReviewRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BatchUploadReviewRequest *>(to)->MergeFrom(
      static_cast<const BatchUploadReviewRequest &>(from));
}


void BatchUploadReviewRequest::MergeFrom(const BatchUploadReviewRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BatchUploadReviewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_reviewlist()) {
    _internal_mutable_reviewlist()->::proto::ReviewList::MergeFrom(from._internal_reviewlist());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BatchUploadReviewRequest::CopyFrom(const BatchUploadReviewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BatchUploadReviewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchUploadReviewRequest::IsInitialized() const {
  return true;
}

void BatchUploadReviewRequest::InternalSwap(BatchUploadReviewRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(reviewlist_, other->reviewlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchUploadReviewRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[1]);
}

// ===================================================================

class GetReviewsByAuthorRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetReviewsByAuthorRequest>()._has_bits_);
  static void set_has_author(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

GetReviewsByAuthorRequest::GetReviewsByAuthorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.GetReviewsByAuthorRequest)
}
GetReviewsByAuthorRequest::GetReviewsByAuthorRequest(const GetReviewsByAuthorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  author_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    author_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_author()) {
    author_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_author(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetReviewsByAuthorRequest)
}

inline void GetReviewsByAuthorRequest::SharedCtor() {
author_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  author_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetReviewsByAuthorRequest::~GetReviewsByAuthorRequest() {
  // @@protoc_insertion_point(destructor:proto.GetReviewsByAuthorRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetReviewsByAuthorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  author_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetReviewsByAuthorRequest::ArenaDtor(void* object) {
  GetReviewsByAuthorRequest* _this = reinterpret_cast< GetReviewsByAuthorRequest* >(object);
  (void)_this;
}
void GetReviewsByAuthorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetReviewsByAuthorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetReviewsByAuthorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetReviewsByAuthorRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    author_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetReviewsByAuthorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string author = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_author();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.GetReviewsByAuthorRequest.author"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetReviewsByAuthorRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetReviewsByAuthorRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string author = 1;
  if (_internal_has_author()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_author().data(), static_cast<int>(this->_internal_author().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetReviewsByAuthorRequest.author");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_author(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetReviewsByAuthorRequest)
  return target;
}

size_t GetReviewsByAuthorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetReviewsByAuthorRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string author = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_author());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetReviewsByAuthorRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetReviewsByAuthorRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetReviewsByAuthorRequest::GetClassData() const { return &_class_data_; }

void GetReviewsByAuthorRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetReviewsByAuthorRequest *>(to)->MergeFrom(
      static_cast<const GetReviewsByAuthorRequest &>(from));
}


void GetReviewsByAuthorRequest::MergeFrom(const GetReviewsByAuthorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetReviewsByAuthorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_author()) {
    _internal_set_author(from._internal_author());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetReviewsByAuthorRequest::CopyFrom(const GetReviewsByAuthorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetReviewsByAuthorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetReviewsByAuthorRequest::IsInitialized() const {
  return true;
}

void GetReviewsByAuthorRequest::InternalSwap(GetReviewsByAuthorRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &author_, lhs_arena,
      &other->author_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetReviewsByAuthorRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[2]);
}

// ===================================================================

class GetAuthorsRequest::_Internal {
 public:
};

GetAuthorsRequest::GetAuthorsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:proto.GetAuthorsRequest)
}
GetAuthorsRequest::GetAuthorsRequest(const GetAuthorsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetAuthorsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAuthorsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAuthorsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetAuthorsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[3]);
}

// ===================================================================

class GetReviewsByAuthorResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetReviewsByAuthorResponse>()._has_bits_);
  static const ::proto::ReviewList& reviewlist(const GetReviewsByAuthorResponse* msg);
  static void set_has_reviewlist(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::proto::ReviewList&
GetReviewsByAuthorResponse::_Internal::reviewlist(const GetReviewsByAuthorResponse* msg) {
  return *msg->reviewlist_;
}
void GetReviewsByAuthorResponse::clear_reviewlist() {
  if (reviewlist_ != nullptr) reviewlist_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
GetReviewsByAuthorResponse::GetReviewsByAuthorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.GetReviewsByAuthorResponse)
}
GetReviewsByAuthorResponse::GetReviewsByAuthorResponse(const GetReviewsByAuthorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_reviewlist()) {
    reviewlist_ = new ::proto::ReviewList(*from.reviewlist_);
  } else {
    reviewlist_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetReviewsByAuthorResponse)
}

inline void GetReviewsByAuthorResponse::SharedCtor() {
reviewlist_ = nullptr;
}

GetReviewsByAuthorResponse::~GetReviewsByAuthorResponse() {
  // @@protoc_insertion_point(destructor:proto.GetReviewsByAuthorResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetReviewsByAuthorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete reviewlist_;
}

void GetReviewsByAuthorResponse::ArenaDtor(void* object) {
  GetReviewsByAuthorResponse* _this = reinterpret_cast< GetReviewsByAuthorResponse* >(object);
  (void)_this;
}
void GetReviewsByAuthorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetReviewsByAuthorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetReviewsByAuthorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetReviewsByAuthorResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(reviewlist_ != nullptr);
    reviewlist_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetReviewsByAuthorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .proto.ReviewList reviewList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_reviewlist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetReviewsByAuthorResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetReviewsByAuthorResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .proto.ReviewList reviewList = 1;
  if (_internal_has_reviewlist()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::reviewlist(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetReviewsByAuthorResponse)
  return target;
}

size_t GetReviewsByAuthorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetReviewsByAuthorResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto.ReviewList reviewList = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reviewlist_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetReviewsByAuthorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetReviewsByAuthorResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetReviewsByAuthorResponse::GetClassData() const { return &_class_data_; }

void GetReviewsByAuthorResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetReviewsByAuthorResponse *>(to)->MergeFrom(
      static_cast<const GetReviewsByAuthorResponse &>(from));
}


void GetReviewsByAuthorResponse::MergeFrom(const GetReviewsByAuthorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetReviewsByAuthorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_reviewlist()) {
    _internal_mutable_reviewlist()->::proto::ReviewList::MergeFrom(from._internal_reviewlist());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetReviewsByAuthorResponse::CopyFrom(const GetReviewsByAuthorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetReviewsByAuthorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetReviewsByAuthorResponse::IsInitialized() const {
  return true;
}

void GetReviewsByAuthorResponse::InternalSwap(GetReviewsByAuthorResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(reviewlist_, other->reviewlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetReviewsByAuthorResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[4]);
}

// ===================================================================

class GetAuthorsResponse::_Internal {
 public:
};

GetAuthorsResponse::GetAuthorsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  author_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.GetAuthorsResponse)
}
GetAuthorsResponse::GetAuthorsResponse(const GetAuthorsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      author_(from.author_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetAuthorsResponse)
}

inline void GetAuthorsResponse::SharedCtor() {
}

GetAuthorsResponse::~GetAuthorsResponse() {
  // @@protoc_insertion_point(destructor:proto.GetAuthorsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetAuthorsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetAuthorsResponse::ArenaDtor(void* object) {
  GetAuthorsResponse* _this = reinterpret_cast< GetAuthorsResponse* >(object);
  (void)_this;
}
void GetAuthorsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAuthorsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetAuthorsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAuthorsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  author_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAuthorsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string author = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_author();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.GetAuthorsResponse.author"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAuthorsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAuthorsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string author = 1;
  for (int i = 0, n = this->_internal_author_size(); i < n; i++) {
    const auto& s = this->_internal_author(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetAuthorsResponse.author");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAuthorsResponse)
  return target;
}

size_t GetAuthorsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAuthorsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string author = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(author_.size());
  for (int i = 0, n = author_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      author_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAuthorsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetAuthorsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAuthorsResponse::GetClassData() const { return &_class_data_; }

void GetAuthorsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetAuthorsResponse *>(to)->MergeFrom(
      static_cast<const GetAuthorsResponse &>(from));
}


void GetAuthorsResponse::MergeFrom(const GetAuthorsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAuthorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  author_.MergeFrom(from.author_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAuthorsResponse::CopyFrom(const GetAuthorsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAuthorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAuthorsResponse::IsInitialized() const {
  return true;
}

void GetAuthorsResponse::InternalSwap(GetAuthorsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  author_.InternalSwap(&other->author_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAuthorsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[5]);
}

// ===================================================================

class UploadObjectRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UploadObjectRequest>()._has_bits_);
  static void set_has_bucketname(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_objectname(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_serializedobject(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

UploadObjectRequest::UploadObjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.UploadObjectRequest)
}
UploadObjectRequest::UploadObjectRequest(const UploadObjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  bucketname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    bucketname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_bucketname()) {
    bucketname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bucketname(), 
      GetArenaForAllocation());
  }
  objectname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    objectname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_objectname()) {
    objectname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_objectname(), 
      GetArenaForAllocation());
  }
  serializedobject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    serializedobject_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_serializedobject()) {
    serializedobject_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_serializedobject(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:proto.UploadObjectRequest)
}

inline void UploadObjectRequest::SharedCtor() {
bucketname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  bucketname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
objectname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  objectname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
serializedobject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  serializedobject_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UploadObjectRequest::~UploadObjectRequest() {
  // @@protoc_insertion_point(destructor:proto.UploadObjectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UploadObjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  bucketname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  objectname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  serializedobject_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UploadObjectRequest::ArenaDtor(void* object) {
  UploadObjectRequest* _this = reinterpret_cast< UploadObjectRequest* >(object);
  (void)_this;
}
void UploadObjectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UploadObjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UploadObjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UploadObjectRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      bucketname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      objectname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      serializedobject_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadObjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string bucketName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_bucketname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.UploadObjectRequest.bucketName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string objectName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_objectname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.UploadObjectRequest.objectName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string serializedObject = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_serializedobject();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.UploadObjectRequest.serializedObject"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UploadObjectRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UploadObjectRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string bucketName = 1;
  if (_internal_has_bucketname()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bucketname().data(), static_cast<int>(this->_internal_bucketname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UploadObjectRequest.bucketName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_bucketname(), target);
  }

  // optional string objectName = 2;
  if (_internal_has_objectname()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_objectname().data(), static_cast<int>(this->_internal_objectname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UploadObjectRequest.objectName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_objectname(), target);
  }

  // optional string serializedObject = 3;
  if (_internal_has_serializedobject()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_serializedobject().data(), static_cast<int>(this->_internal_serializedobject().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UploadObjectRequest.serializedObject");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_serializedobject(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UploadObjectRequest)
  return target;
}

size_t UploadObjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UploadObjectRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string bucketName = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_bucketname());
    }

    // optional string objectName = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_objectname());
    }

    // optional string serializedObject = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_serializedobject());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadObjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UploadObjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadObjectRequest::GetClassData() const { return &_class_data_; }

void UploadObjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UploadObjectRequest *>(to)->MergeFrom(
      static_cast<const UploadObjectRequest &>(from));
}


void UploadObjectRequest::MergeFrom(const UploadObjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UploadObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_bucketname(from._internal_bucketname());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_objectname(from._internal_objectname());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_serializedobject(from._internal_serializedobject());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadObjectRequest::CopyFrom(const UploadObjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UploadObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadObjectRequest::IsInitialized() const {
  return true;
}

void UploadObjectRequest::InternalSwap(UploadObjectRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &bucketname_, lhs_arena,
      &other->bucketname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &objectname_, lhs_arena,
      &other->objectname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &serializedobject_, lhs_arena,
      &other->serializedobject_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadObjectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[6]);
}

// ===================================================================

class DownloadObjectRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<DownloadObjectRequest>()._has_bits_);
  static void set_has_bucketname(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_objectname(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

DownloadObjectRequest::DownloadObjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.DownloadObjectRequest)
}
DownloadObjectRequest::DownloadObjectRequest(const DownloadObjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  bucketname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    bucketname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_bucketname()) {
    bucketname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bucketname(), 
      GetArenaForAllocation());
  }
  objectname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    objectname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_objectname()) {
    objectname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_objectname(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:proto.DownloadObjectRequest)
}

inline void DownloadObjectRequest::SharedCtor() {
bucketname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  bucketname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
objectname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  objectname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DownloadObjectRequest::~DownloadObjectRequest() {
  // @@protoc_insertion_point(destructor:proto.DownloadObjectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DownloadObjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  bucketname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  objectname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DownloadObjectRequest::ArenaDtor(void* object) {
  DownloadObjectRequest* _this = reinterpret_cast< DownloadObjectRequest* >(object);
  (void)_this;
}
void DownloadObjectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DownloadObjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DownloadObjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DownloadObjectRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      bucketname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      objectname_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DownloadObjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string bucketName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_bucketname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.DownloadObjectRequest.bucketName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string objectName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_objectname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.DownloadObjectRequest.objectName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DownloadObjectRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DownloadObjectRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string bucketName = 1;
  if (_internal_has_bucketname()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bucketname().data(), static_cast<int>(this->_internal_bucketname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DownloadObjectRequest.bucketName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_bucketname(), target);
  }

  // optional string objectName = 2;
  if (_internal_has_objectname()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_objectname().data(), static_cast<int>(this->_internal_objectname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DownloadObjectRequest.objectName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_objectname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DownloadObjectRequest)
  return target;
}

size_t DownloadObjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DownloadObjectRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string bucketName = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_bucketname());
    }

    // optional string objectName = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_objectname());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DownloadObjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DownloadObjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DownloadObjectRequest::GetClassData() const { return &_class_data_; }

void DownloadObjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DownloadObjectRequest *>(to)->MergeFrom(
      static_cast<const DownloadObjectRequest &>(from));
}


void DownloadObjectRequest::MergeFrom(const DownloadObjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DownloadObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_bucketname(from._internal_bucketname());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_objectname(from._internal_objectname());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DownloadObjectRequest::CopyFrom(const DownloadObjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DownloadObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadObjectRequest::IsInitialized() const {
  return true;
}

void DownloadObjectRequest::InternalSwap(DownloadObjectRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &bucketname_, lhs_arena,
      &other->bucketname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &objectname_, lhs_arena,
      &other->objectname_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DownloadObjectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[7]);
}

// ===================================================================

class DownloadObjectResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DownloadObjectResponse>()._has_bits_);
  static void set_has_found(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

DownloadObjectResponse::DownloadObjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.DownloadObjectResponse)
}
DownloadObjectResponse::DownloadObjectResponse(const DownloadObjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_data()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  found_ = from.found_;
  // @@protoc_insertion_point(copy_constructor:proto.DownloadObjectResponse)
}

inline void DownloadObjectResponse::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
found_ = false;
}

DownloadObjectResponse::~DownloadObjectResponse() {
  // @@protoc_insertion_point(destructor:proto.DownloadObjectResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DownloadObjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DownloadObjectResponse::ArenaDtor(void* object) {
  DownloadObjectResponse* _this = reinterpret_cast< DownloadObjectResponse* >(object);
  (void)_this;
}
void DownloadObjectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DownloadObjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DownloadObjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DownloadObjectResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmpty();
  }
  found_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DownloadObjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool found = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_found(&has_bits);
          found_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.DownloadObjectResponse.data"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DownloadObjectResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DownloadObjectResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional bool found = 1;
  if (_internal_has_found()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_found(), target);
  }

  // optional string data = 2;
  if (_internal_has_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DownloadObjectResponse.data");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DownloadObjectResponse)
  return target;
}

size_t DownloadObjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DownloadObjectResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string data = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_data());
    }

    // optional bool found = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DownloadObjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DownloadObjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DownloadObjectResponse::GetClassData() const { return &_class_data_; }

void DownloadObjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DownloadObjectResponse *>(to)->MergeFrom(
      static_cast<const DownloadObjectResponse &>(from));
}


void DownloadObjectResponse::MergeFrom(const DownloadObjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DownloadObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_data(from._internal_data());
    }
    if (cached_has_bits & 0x00000002u) {
      found_ = from.found_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DownloadObjectResponse::CopyFrom(const DownloadObjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DownloadObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadObjectResponse::IsInitialized() const {
  return true;
}

void DownloadObjectResponse::InternalSwap(DownloadObjectResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  swap(found_, other->found_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DownloadObjectResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[8]);
}

// ===================================================================

class StatObjectRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<StatObjectRequest>()._has_bits_);
  static void set_has_bucketname(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_objectname(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

StatObjectRequest::StatObjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.StatObjectRequest)
}
StatObjectRequest::StatObjectRequest(const StatObjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  bucketname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    bucketname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_bucketname()) {
    bucketname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bucketname(), 
      GetArenaForAllocation());
  }
  objectname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    objectname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_objectname()) {
    objectname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_objectname(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:proto.StatObjectRequest)
}

inline void StatObjectRequest::SharedCtor() {
bucketname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  bucketname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
objectname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  objectname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StatObjectRequest::~StatObjectRequest() {
  // @@protoc_insertion_point(destructor:proto.StatObjectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StatObjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  bucketname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  objectname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StatObjectRequest::ArenaDtor(void* object) {
  StatObjectRequest* _this = reinterpret_cast< StatObjectRequest* >(object);
  (void)_this;
}
void StatObjectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatObjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StatObjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.StatObjectRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      bucketname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      objectname_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatObjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string bucketName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_bucketname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.StatObjectRequest.bucketName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string objectName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_objectname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.StatObjectRequest.objectName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StatObjectRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.StatObjectRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string bucketName = 1;
  if (_internal_has_bucketname()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bucketname().data(), static_cast<int>(this->_internal_bucketname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.StatObjectRequest.bucketName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_bucketname(), target);
  }

  // optional string objectName = 2;
  if (_internal_has_objectname()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_objectname().data(), static_cast<int>(this->_internal_objectname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.StatObjectRequest.objectName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_objectname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.StatObjectRequest)
  return target;
}

size_t StatObjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.StatObjectRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string bucketName = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_bucketname());
    }

    // optional string objectName = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_objectname());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatObjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StatObjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatObjectRequest::GetClassData() const { return &_class_data_; }

void StatObjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StatObjectRequest *>(to)->MergeFrom(
      static_cast<const StatObjectRequest &>(from));
}


void StatObjectRequest::MergeFrom(const StatObjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.StatObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_bucketname(from._internal_bucketname());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_objectname(from._internal_objectname());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StatObjectRequest::CopyFrom(const StatObjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.StatObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatObjectRequest::IsInitialized() const {
  return true;
}

void StatObjectRequest::InternalSwap(StatObjectRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &bucketname_, lhs_arena,
      &other->bucketname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &objectname_, lhs_arena,
      &other->objectname_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StatObjectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[9]);
}

// ===================================================================

class StatObjectResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StatObjectResponse>()._has_bits_);
  static void set_has_found(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

StatObjectResponse::StatObjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.StatObjectResponse)
}
StatObjectResponse::StatObjectResponse(const StatObjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  found_ = from.found_;
  // @@protoc_insertion_point(copy_constructor:proto.StatObjectResponse)
}

inline void StatObjectResponse::SharedCtor() {
found_ = false;
}

StatObjectResponse::~StatObjectResponse() {
  // @@protoc_insertion_point(destructor:proto.StatObjectResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StatObjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StatObjectResponse::ArenaDtor(void* object) {
  StatObjectResponse* _this = reinterpret_cast< StatObjectResponse* >(object);
  (void)_this;
}
void StatObjectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatObjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StatObjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.StatObjectResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  found_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatObjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool found = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_found(&has_bits);
          found_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StatObjectResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.StatObjectResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional bool found = 1;
  if (_internal_has_found()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_found(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.StatObjectResponse)
  return target;
}

size_t StatObjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.StatObjectResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool found = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatObjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StatObjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatObjectResponse::GetClassData() const { return &_class_data_; }

void StatObjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StatObjectResponse *>(to)->MergeFrom(
      static_cast<const StatObjectResponse &>(from));
}


void StatObjectResponse::MergeFrom(const StatObjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.StatObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_found()) {
    _internal_set_found(from._internal_found());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StatObjectResponse::CopyFrom(const StatObjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.StatObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatObjectResponse::IsInitialized() const {
  return true;
}

void StatObjectResponse::InternalSwap(StatObjectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(found_, other->found_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatObjectResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[10]);
}

// ===================================================================

class UploadFileRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UploadFileRequest>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_body(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

UploadFileRequest::UploadFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.UploadFileRequest)
}
UploadFileRequest::UploadFileRequest(const UploadFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  body_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    body_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_body()) {
    body_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_body(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:proto.UploadFileRequest)
}

inline void UploadFileRequest::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
body_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  body_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UploadFileRequest::~UploadFileRequest() {
  // @@protoc_insertion_point(destructor:proto.UploadFileRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UploadFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UploadFileRequest::ArenaDtor(void* object) {
  UploadFileRequest* _this = reinterpret_cast< UploadFileRequest* >(object);
  (void)_this;
}
void UploadFileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UploadFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UploadFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UploadFileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      body_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadFileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.UploadFileRequest.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bytes body = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_body();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UploadFileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UploadFileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string name = 1;
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UploadFileRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional bytes body = 2;
  if (_internal_has_body()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_body(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UploadFileRequest)
  return target;
}

size_t UploadFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UploadFileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional bytes body = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_body());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadFileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UploadFileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadFileRequest::GetClassData() const { return &_class_data_; }

void UploadFileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UploadFileRequest *>(to)->MergeFrom(
      static_cast<const UploadFileRequest &>(from));
}


void UploadFileRequest::MergeFrom(const UploadFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UploadFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_body(from._internal_body());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadFileRequest::CopyFrom(const UploadFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UploadFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadFileRequest::IsInitialized() const {
  return true;
}

void UploadFileRequest::InternalSwap(UploadFileRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &body_, lhs_arena,
      &other->body_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadFileRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[11]);
}

// ===================================================================

class IngestReviewRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<IngestReviewRequest>()._has_bits_);
  static const ::proto::Review& review(const IngestReviewRequest* msg);
  static void set_has_review(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::proto::Review&
IngestReviewRequest::_Internal::review(const IngestReviewRequest* msg) {
  return *msg->review_;
}
void IngestReviewRequest::clear_review() {
  if (review_ != nullptr) review_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
IngestReviewRequest::IngestReviewRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.IngestReviewRequest)
}
IngestReviewRequest::IngestReviewRequest(const IngestReviewRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_review()) {
    review_ = new ::proto::Review(*from.review_);
  } else {
    review_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.IngestReviewRequest)
}

inline void IngestReviewRequest::SharedCtor() {
review_ = nullptr;
}

IngestReviewRequest::~IngestReviewRequest() {
  // @@protoc_insertion_point(destructor:proto.IngestReviewRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void IngestReviewRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete review_;
}

void IngestReviewRequest::ArenaDtor(void* object) {
  IngestReviewRequest* _this = reinterpret_cast< IngestReviewRequest* >(object);
  (void)_this;
}
void IngestReviewRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IngestReviewRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IngestReviewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.IngestReviewRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(review_ != nullptr);
    review_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IngestReviewRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .proto.Review review = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_review(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IngestReviewRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.IngestReviewRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .proto.Review review = 1;
  if (_internal_has_review()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::review(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.IngestReviewRequest)
  return target;
}

size_t IngestReviewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.IngestReviewRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto.Review review = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *review_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IngestReviewRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IngestReviewRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IngestReviewRequest::GetClassData() const { return &_class_data_; }

void IngestReviewRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IngestReviewRequest *>(to)->MergeFrom(
      static_cast<const IngestReviewRequest &>(from));
}


void IngestReviewRequest::MergeFrom(const IngestReviewRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.IngestReviewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_review()) {
    _internal_mutable_review()->::proto::Review::MergeFrom(from._internal_review());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IngestReviewRequest::CopyFrom(const IngestReviewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.IngestReviewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IngestReviewRequest::IsInitialized() const {
  return true;
}

void IngestReviewRequest::InternalSwap(IngestReviewRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(review_, other->review_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IngestReviewRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[12]);
}

// ===================================================================

class IngestBatchRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<IngestBatchRequest>()._has_bits_);
  static void set_has_filename(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

IngestBatchRequest::IngestBatchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.IngestBatchRequest)
}
IngestBatchRequest::IngestBatchRequest(const IngestBatchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    filename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_filename()) {
    filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_filename(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:proto.IngestBatchRequest)
}

inline void IngestBatchRequest::SharedCtor() {
filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  filename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

IngestBatchRequest::~IngestBatchRequest() {
  // @@protoc_insertion_point(destructor:proto.IngestBatchRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void IngestBatchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  filename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IngestBatchRequest::ArenaDtor(void* object) {
  IngestBatchRequest* _this = reinterpret_cast< IngestBatchRequest* >(object);
  (void)_this;
}
void IngestBatchRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IngestBatchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IngestBatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.IngestBatchRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    filename_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IngestBatchRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string filename = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_filename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.IngestBatchRequest.filename"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IngestBatchRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.IngestBatchRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string filename = 1;
  if (_internal_has_filename()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filename().data(), static_cast<int>(this->_internal_filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.IngestBatchRequest.filename");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_filename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.IngestBatchRequest)
  return target;
}

size_t IngestBatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.IngestBatchRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string filename = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filename());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IngestBatchRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IngestBatchRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IngestBatchRequest::GetClassData() const { return &_class_data_; }

void IngestBatchRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IngestBatchRequest *>(to)->MergeFrom(
      static_cast<const IngestBatchRequest &>(from));
}


void IngestBatchRequest::MergeFrom(const IngestBatchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.IngestBatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_filename()) {
    _internal_set_filename(from._internal_filename());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IngestBatchRequest::CopyFrom(const IngestBatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.IngestBatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IngestBatchRequest::IsInitialized() const {
  return true;
}

void IngestBatchRequest::InternalSwap(IngestBatchRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &filename_, lhs_arena,
      &other->filename_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata IngestBatchRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[13]);
}

// ===================================================================

class UploadProjectionRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UploadProjectionRequest>()._has_bits_);
  static const ::proto::Projection& projection(const UploadProjectionRequest* msg);
  static void set_has_projection(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::proto::MovieIndices& movieindices(const UploadProjectionRequest* msg);
  static void set_has_movieindices(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::proto::Projection&
UploadProjectionRequest::_Internal::projection(const UploadProjectionRequest* msg) {
  return *msg->projection_;
}
const ::proto::MovieIndices&
UploadProjectionRequest::_Internal::movieindices(const UploadProjectionRequest* msg) {
  return *msg->movieindices_;
}
void UploadProjectionRequest::clear_projection() {
  if (projection_ != nullptr) projection_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void UploadProjectionRequest::clear_movieindices() {
  if (movieindices_ != nullptr) movieindices_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
UploadProjectionRequest::UploadProjectionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.UploadProjectionRequest)
}
UploadProjectionRequest::UploadProjectionRequest(const UploadProjectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_projection()) {
    projection_ = new ::proto::Projection(*from.projection_);
  } else {
    projection_ = nullptr;
  }
  if (from._internal_has_movieindices()) {
    movieindices_ = new ::proto::MovieIndices(*from.movieindices_);
  } else {
    movieindices_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.UploadProjectionRequest)
}

inline void UploadProjectionRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&projection_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&movieindices_) -
    reinterpret_cast<char*>(&projection_)) + sizeof(movieindices_));
}

UploadProjectionRequest::~UploadProjectionRequest() {
  // @@protoc_insertion_point(destructor:proto.UploadProjectionRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UploadProjectionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete projection_;
  if (this != internal_default_instance()) delete movieindices_;
}

void UploadProjectionRequest::ArenaDtor(void* object) {
  UploadProjectionRequest* _this = reinterpret_cast< UploadProjectionRequest* >(object);
  (void)_this;
}
void UploadProjectionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UploadProjectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UploadProjectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UploadProjectionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(projection_ != nullptr);
      projection_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(movieindices_ != nullptr);
      movieindices_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadProjectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .proto.Projection projection = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_projection(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .proto.MovieIndices movieIndices = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_movieindices(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UploadProjectionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UploadProjectionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .proto.Projection projection = 1;
  if (_internal_has_projection()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::projection(this), target, stream);
  }

  // optional .proto.MovieIndices movieIndices = 2;
  if (_internal_has_movieindices()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::movieindices(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UploadProjectionRequest)
  return target;
}

size_t UploadProjectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UploadProjectionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .proto.Projection projection = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *projection_);
    }

    // optional .proto.MovieIndices movieIndices = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *movieindices_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadProjectionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UploadProjectionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadProjectionRequest::GetClassData() const { return &_class_data_; }

void UploadProjectionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UploadProjectionRequest *>(to)->MergeFrom(
      static_cast<const UploadProjectionRequest &>(from));
}


void UploadProjectionRequest::MergeFrom(const UploadProjectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UploadProjectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_projection()->::proto::Projection::MergeFrom(from._internal_projection());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_movieindices()->::proto::MovieIndices::MergeFrom(from._internal_movieindices());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadProjectionRequest::CopyFrom(const UploadProjectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UploadProjectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadProjectionRequest::IsInitialized() const {
  return true;
}

void UploadProjectionRequest::InternalSwap(UploadProjectionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UploadProjectionRequest, movieindices_)
      + sizeof(UploadProjectionRequest::movieindices_)
      - PROTOBUF_FIELD_OFFSET(UploadProjectionRequest, projection_)>(
          reinterpret_cast<char*>(&projection_),
          reinterpret_cast<char*>(&other->projection_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadProjectionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[14]);
}

// ===================================================================

class AppendProjectionRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<AppendProjectionRequest>()._has_bits_);
  static const ::proto::Projection& projection(const AppendProjectionRequest* msg);
  static void set_has_projection(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::proto::Projection&
AppendProjectionRequest::_Internal::projection(const AppendProjectionRequest* msg) {
  return *msg->projection_;
}
void AppendProjectionRequest::clear_projection() {
  if (projection_ != nullptr) projection_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
AppendProjectionRequest::AppendProjectionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.AppendProjectionRequest)
}
AppendProjectionRequest::AppendProjectionRequest(const AppendProjectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_projection()) {
    projection_ = new ::proto::Projection(*from.projection_);
  } else {
    projection_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.AppendProjectionRequest)
}

inline void AppendProjectionRequest::SharedCtor() {
projection_ = nullptr;
}

AppendProjectionRequest::~AppendProjectionRequest() {
  // @@protoc_insertion_point(destructor:proto.AppendProjectionRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AppendProjectionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete projection_;
}

void AppendProjectionRequest::ArenaDtor(void* object) {
  AppendProjectionRequest* _this = reinterpret_cast< AppendProjectionRequest* >(object);
  (void)_this;
}
void AppendProjectionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AppendProjectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AppendProjectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AppendProjectionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(projection_ != nullptr);
    projection_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppendProjectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .proto.Projection projection = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_projection(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AppendProjectionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.AppendProjectionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .proto.Projection projection = 1;
  if (_internal_has_projection()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::projection(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AppendProjectionRequest)
  return target;
}

size_t AppendProjectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AppendProjectionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto.Projection projection = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *projection_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AppendProjectionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AppendProjectionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AppendProjectionRequest::GetClassData() const { return &_class_data_; }

void AppendProjectionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AppendProjectionRequest *>(to)->MergeFrom(
      static_cast<const AppendProjectionRequest &>(from));
}


void AppendProjectionRequest::MergeFrom(const AppendProjectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AppendProjectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_projection()) {
    _internal_mutable_projection()->::proto::Projection::MergeFrom(from._internal_projection());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AppendProjectionRequest::CopyFrom(const AppendProjectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AppendProjectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppendProjectionRequest::IsInitialized() const {
  return true;
}

void AppendProjectionRequest::InternalSwap(AppendProjectionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(projection_, other->projection_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AppendProjectionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[15]);
}

// ===================================================================

class DownloadProjectionRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<DownloadProjectionRequest>()._has_bits_);
  static void set_has_shardid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

DownloadProjectionRequest::DownloadProjectionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.DownloadProjectionRequest)
}
DownloadProjectionRequest::DownloadProjectionRequest(const DownloadProjectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  shardid_ = from.shardid_;
  // @@protoc_insertion_point(copy_constructor:proto.DownloadProjectionRequest)
}

inline void DownloadProjectionRequest::SharedCtor() {
shardid_ = 0;
}

DownloadProjectionRequest::~DownloadProjectionRequest() {
  // @@protoc_insertion_point(destructor:proto.DownloadProjectionRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DownloadProjectionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DownloadProjectionRequest::ArenaDtor(void* object) {
  DownloadProjectionRequest* _this = reinterpret_cast< DownloadProjectionRequest* >(object);
  (void)_this;
}
void DownloadProjectionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DownloadProjectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DownloadProjectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DownloadProjectionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shardid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DownloadProjectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 shardId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_shardid(&has_bits);
          shardid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DownloadProjectionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DownloadProjectionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int32 shardId = 1;
  if (_internal_has_shardid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_shardid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DownloadProjectionRequest)
  return target;
}

size_t DownloadProjectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DownloadProjectionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 shardId = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_shardid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DownloadProjectionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DownloadProjectionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DownloadProjectionRequest::GetClassData() const { return &_class_data_; }

void DownloadProjectionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DownloadProjectionRequest *>(to)->MergeFrom(
      static_cast<const DownloadProjectionRequest &>(from));
}


void DownloadProjectionRequest::MergeFrom(const DownloadProjectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DownloadProjectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_shardid()) {
    _internal_set_shardid(from._internal_shardid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DownloadProjectionRequest::CopyFrom(const DownloadProjectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DownloadProjectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadProjectionRequest::IsInitialized() const {
  return true;
}

void DownloadProjectionRequest::InternalSwap(DownloadProjectionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(shardid_, other->shardid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DownloadProjectionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[16]);
}

// ===================================================================

class DownloadMovieIndicesRequest::_Internal {
 public:
};

DownloadMovieIndicesRequest::DownloadMovieIndicesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:proto.DownloadMovieIndicesRequest)
}
DownloadMovieIndicesRequest::DownloadMovieIndicesRequest(const DownloadMovieIndicesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.DownloadMovieIndicesRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DownloadMovieIndicesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DownloadMovieIndicesRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DownloadMovieIndicesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[17]);
}

// ===================================================================

class DownloadProjectionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DownloadProjectionResponse>()._has_bits_);
  static const ::proto::Projection& projection(const DownloadProjectionResponse* msg);
  static void set_has_projection(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::proto::Projection&
DownloadProjectionResponse::_Internal::projection(const DownloadProjectionResponse* msg) {
  return *msg->projection_;
}
void DownloadProjectionResponse::clear_projection() {
  if (projection_ != nullptr) projection_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
DownloadProjectionResponse::DownloadProjectionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.DownloadProjectionResponse)
}
DownloadProjectionResponse::DownloadProjectionResponse(const DownloadProjectionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_projection()) {
    projection_ = new ::proto::Projection(*from.projection_);
  } else {
    projection_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.DownloadProjectionResponse)
}

inline void DownloadProjectionResponse::SharedCtor() {
projection_ = nullptr;
}

DownloadProjectionResponse::~DownloadProjectionResponse() {
  // @@protoc_insertion_point(destructor:proto.DownloadProjectionResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DownloadProjectionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete projection_;
}

void DownloadProjectionResponse::ArenaDtor(void* object) {
  DownloadProjectionResponse* _this = reinterpret_cast< DownloadProjectionResponse* >(object);
  (void)_this;
}
void DownloadProjectionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DownloadProjectionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DownloadProjectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DownloadProjectionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(projection_ != nullptr);
    projection_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DownloadProjectionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .proto.Projection projection = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_projection(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DownloadProjectionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DownloadProjectionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .proto.Projection projection = 1;
  if (_internal_has_projection()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::projection(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DownloadProjectionResponse)
  return target;
}

size_t DownloadProjectionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DownloadProjectionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto.Projection projection = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *projection_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DownloadProjectionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DownloadProjectionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DownloadProjectionResponse::GetClassData() const { return &_class_data_; }

void DownloadProjectionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DownloadProjectionResponse *>(to)->MergeFrom(
      static_cast<const DownloadProjectionResponse &>(from));
}


void DownloadProjectionResponse::MergeFrom(const DownloadProjectionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DownloadProjectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_projection()) {
    _internal_mutable_projection()->::proto::Projection::MergeFrom(from._internal_projection());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DownloadProjectionResponse::CopyFrom(const DownloadProjectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DownloadProjectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadProjectionResponse::IsInitialized() const {
  return true;
}

void DownloadProjectionResponse::InternalSwap(DownloadProjectionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(projection_, other->projection_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DownloadProjectionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[18]);
}

// ===================================================================

class DownloadMovieIndicesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DownloadMovieIndicesResponse>()._has_bits_);
  static const ::proto::MovieIndices& movieindices(const DownloadMovieIndicesResponse* msg);
  static void set_has_movieindices(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::proto::MovieIndices&
DownloadMovieIndicesResponse::_Internal::movieindices(const DownloadMovieIndicesResponse* msg) {
  return *msg->movieindices_;
}
void DownloadMovieIndicesResponse::clear_movieindices() {
  if (movieindices_ != nullptr) movieindices_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
DownloadMovieIndicesResponse::DownloadMovieIndicesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.DownloadMovieIndicesResponse)
}
DownloadMovieIndicesResponse::DownloadMovieIndicesResponse(const DownloadMovieIndicesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_movieindices()) {
    movieindices_ = new ::proto::MovieIndices(*from.movieindices_);
  } else {
    movieindices_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.DownloadMovieIndicesResponse)
}

inline void DownloadMovieIndicesResponse::SharedCtor() {
movieindices_ = nullptr;
}

DownloadMovieIndicesResponse::~DownloadMovieIndicesResponse() {
  // @@protoc_insertion_point(destructor:proto.DownloadMovieIndicesResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DownloadMovieIndicesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete movieindices_;
}

void DownloadMovieIndicesResponse::ArenaDtor(void* object) {
  DownloadMovieIndicesResponse* _this = reinterpret_cast< DownloadMovieIndicesResponse* >(object);
  (void)_this;
}
void DownloadMovieIndicesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DownloadMovieIndicesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DownloadMovieIndicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DownloadMovieIndicesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(movieindices_ != nullptr);
    movieindices_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DownloadMovieIndicesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .proto.MovieIndices movieIndices = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_movieindices(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DownloadMovieIndicesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DownloadMovieIndicesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .proto.MovieIndices movieIndices = 1;
  if (_internal_has_movieindices()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::movieindices(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DownloadMovieIndicesResponse)
  return target;
}

size_t DownloadMovieIndicesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DownloadMovieIndicesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto.MovieIndices movieIndices = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *movieindices_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DownloadMovieIndicesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DownloadMovieIndicesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DownloadMovieIndicesResponse::GetClassData() const { return &_class_data_; }

void DownloadMovieIndicesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DownloadMovieIndicesResponse *>(to)->MergeFrom(
      static_cast<const DownloadMovieIndicesResponse &>(from));
}


void DownloadMovieIndicesResponse::MergeFrom(const DownloadMovieIndicesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DownloadMovieIndicesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_movieindices()) {
    _internal_mutable_movieindices()->::proto::MovieIndices::MergeFrom(from._internal_movieindices());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DownloadMovieIndicesResponse::CopyFrom(const DownloadMovieIndicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DownloadMovieIndicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadMovieIndicesResponse::IsInitialized() const {
  return true;
}

void DownloadMovieIndicesResponse::InternalSwap(DownloadMovieIndicesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(movieindices_, other->movieindices_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DownloadMovieIndicesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[19]);
}

// ===================================================================

class ShardCountRequest::_Internal {
 public:
};

ShardCountRequest::ShardCountRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:proto.ShardCountRequest)
}
ShardCountRequest::ShardCountRequest(const ShardCountRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ShardCountRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShardCountRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShardCountRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ShardCountRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[20]);
}

// ===================================================================

class ShardCountResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ShardCountResponse>()._has_bits_);
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ShardCountResponse::ShardCountResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.ShardCountResponse)
}
ShardCountResponse::ShardCountResponse(const ShardCountResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:proto.ShardCountResponse)
}

inline void ShardCountResponse::SharedCtor() {
count_ = 0;
}

ShardCountResponse::~ShardCountResponse() {
  // @@protoc_insertion_point(destructor:proto.ShardCountResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ShardCountResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ShardCountResponse::ArenaDtor(void* object) {
  ShardCountResponse* _this = reinterpret_cast< ShardCountResponse* >(object);
  (void)_this;
}
void ShardCountResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShardCountResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ShardCountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ShardCountResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  count_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShardCountResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_count(&has_bits);
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShardCountResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ShardCountResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int32 count = 1;
  if (_internal_has_count()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ShardCountResponse)
  return target;
}

size_t ShardCountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ShardCountResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 count = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShardCountResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ShardCountResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShardCountResponse::GetClassData() const { return &_class_data_; }

void ShardCountResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ShardCountResponse *>(to)->MergeFrom(
      static_cast<const ShardCountResponse &>(from));
}


void ShardCountResponse::MergeFrom(const ShardCountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ShardCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_count()) {
    _internal_set_count(from._internal_count());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShardCountResponse::CopyFrom(const ShardCountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ShardCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShardCountResponse::IsInitialized() const {
  return true;
}

void ShardCountResponse::InternalSwap(ShardCountResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(count_, other->count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShardCountResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[21]);
}

// ===================================================================

class ManageResourceRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ManageResourceRequest>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_action(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_resource(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

ManageResourceRequest::ManageResourceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:proto.ManageResourceRequest)
}
ManageResourceRequest::ManageResourceRequest(const ManageResourceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  ::memcpy(&action_, &from.action_,
    static_cast<size_t>(reinterpret_cast<char*>(&resource_) -
    reinterpret_cast<char*>(&action_)) + sizeof(resource_));
  // @@protoc_insertion_point(copy_constructor:proto.ManageResourceRequest)
}

inline void ManageResourceRequest::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&action_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&resource_) -
    reinterpret_cast<char*>(&action_)) + sizeof(resource_));
}

ManageResourceRequest::~ManageResourceRequest() {
  // @@protoc_insertion_point(destructor:proto.ManageResourceRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ManageResourceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ManageResourceRequest::ArenaDtor(void* object) {
  ManageResourceRequest* _this = reinterpret_cast< ManageResourceRequest* >(object);
  (void)_this;
}
void ManageResourceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ManageResourceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ManageResourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ManageResourceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&action_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&resource_) -
        reinterpret_cast<char*>(&action_)) + sizeof(resource_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ManageResourceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.ManageResourceRequest.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .proto.Action action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::proto::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // optional .proto.Resource resource = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_resource(static_cast<::proto::Resource>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ManageResourceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ManageResourceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string name = 1;
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ManageResourceRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional .proto.Action action = 2;
  if (_internal_has_action()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_action(), target);
  }

  // optional .proto.Resource resource = 3;
  if (_internal_has_resource()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_resource(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ManageResourceRequest)
  return target;
}

size_t ManageResourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ManageResourceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional .proto.Action action = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_action());
    }

    // optional .proto.Resource resource = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_resource());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ManageResourceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ManageResourceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ManageResourceRequest::GetClassData() const { return &_class_data_; }

void ManageResourceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ManageResourceRequest *>(to)->MergeFrom(
      static_cast<const ManageResourceRequest &>(from));
}


void ManageResourceRequest::MergeFrom(const ManageResourceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ManageResourceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      action_ = from.action_;
    }
    if (cached_has_bits & 0x00000004u) {
      resource_ = from.resource_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ManageResourceRequest::CopyFrom(const ManageResourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ManageResourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManageResourceRequest::IsInitialized() const {
  return true;
}

void ManageResourceRequest::InternalSwap(ManageResourceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ManageResourceRequest, resource_)
      + sizeof(ManageResourceRequest::resource_)
      - PROTOBUF_FIELD_OFFSET(ManageResourceRequest, action_)>(
          reinterpret_cast<char*>(&action_),
          reinterpret_cast<char*>(&other->action_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ManageResourceRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_resource_5fservices_2eproto_getter, &descriptor_table_resource_5fservices_2eproto_once,
      file_level_metadata_resource_5fservices_2eproto[22]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::UploadReviewRequest* Arena::CreateMaybeMessage< ::proto::UploadReviewRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UploadReviewRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::BatchUploadReviewRequest* Arena::CreateMaybeMessage< ::proto::BatchUploadReviewRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::BatchUploadReviewRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetReviewsByAuthorRequest* Arena::CreateMaybeMessage< ::proto::GetReviewsByAuthorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetReviewsByAuthorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetAuthorsRequest* Arena::CreateMaybeMessage< ::proto::GetAuthorsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetAuthorsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetReviewsByAuthorResponse* Arena::CreateMaybeMessage< ::proto::GetReviewsByAuthorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetReviewsByAuthorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetAuthorsResponse* Arena::CreateMaybeMessage< ::proto::GetAuthorsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetAuthorsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UploadObjectRequest* Arena::CreateMaybeMessage< ::proto::UploadObjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UploadObjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DownloadObjectRequest* Arena::CreateMaybeMessage< ::proto::DownloadObjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DownloadObjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DownloadObjectResponse* Arena::CreateMaybeMessage< ::proto::DownloadObjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DownloadObjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::StatObjectRequest* Arena::CreateMaybeMessage< ::proto::StatObjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::StatObjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::StatObjectResponse* Arena::CreateMaybeMessage< ::proto::StatObjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::StatObjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UploadFileRequest* Arena::CreateMaybeMessage< ::proto::UploadFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UploadFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::IngestReviewRequest* Arena::CreateMaybeMessage< ::proto::IngestReviewRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::IngestReviewRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::IngestBatchRequest* Arena::CreateMaybeMessage< ::proto::IngestBatchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::IngestBatchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UploadProjectionRequest* Arena::CreateMaybeMessage< ::proto::UploadProjectionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UploadProjectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::AppendProjectionRequest* Arena::CreateMaybeMessage< ::proto::AppendProjectionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::AppendProjectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DownloadProjectionRequest* Arena::CreateMaybeMessage< ::proto::DownloadProjectionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DownloadProjectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DownloadMovieIndicesRequest* Arena::CreateMaybeMessage< ::proto::DownloadMovieIndicesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DownloadMovieIndicesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DownloadProjectionResponse* Arena::CreateMaybeMessage< ::proto::DownloadProjectionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DownloadProjectionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DownloadMovieIndicesResponse* Arena::CreateMaybeMessage< ::proto::DownloadMovieIndicesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DownloadMovieIndicesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ShardCountRequest* Arena::CreateMaybeMessage< ::proto::ShardCountRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ShardCountRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ShardCountResponse* Arena::CreateMaybeMessage< ::proto::ShardCountResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ShardCountResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ManageResourceRequest* Arena::CreateMaybeMessage< ::proto::ManageResourceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ManageResourceRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
