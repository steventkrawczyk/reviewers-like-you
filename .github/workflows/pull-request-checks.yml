name: 'Pull Request Checks'
on: [pull_request]

permissions:
  contents: read

jobs:
  pull-request-checks:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v3
      - name: python-isort
        uses: isort/isort-action@v1.0.0
        with:
          # Version of isort to use
          isortVersion: # optional, default is latest
          # files or directories to sort
          sortPaths: # optional, default is .
          # isort configuration options
          configuration: # optional, default is --check-only --diff
          # path(s) to requirements files that should be installed to properly configure third-party imports
          requirementsFiles: # optional, default is 
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Pull docker images
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          echo "$DOCKERHUB_TOKEN" | docker login -u $DOCKERHUB_USERNAME --password-stdin docker.io
          docker pull amazon/dynamodb-local
          docker pull minio/minio
          docker pull stevenkrawczyk/reviewers-like-you
      - name: Generate coverage report
        env:
          AWS_ACCESS_KEY_ID: fakeKeyId
          AWS_SECRET_ACCESS_KEY: fakeAccessKey
          AWS_DEFAULT_REGION: us-west-2
        run: |
          pytest . --cov --cov-branch > data/metrics/pytest/coverage_report.txt
      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: data/metrics/pytest/coverage_report.txt
      - name: Generate performance statistics
        env:
          AWS_ACCESS_KEY_ID: fakeKeyId
          AWS_SECRET_ACCESS_KEY: fakeAccessKey
          AWS_DEFAULT_REGION: us-west-2
        run: |
          locust -f tests/locustfile.py -u 10 -r 1 -t 60 --headless --only-summary -H http://localhost:5000 --csv data/metrics/locust/perf
