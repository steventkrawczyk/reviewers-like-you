version: '3.8'
services:
  dynamodb-local:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    volumes:
      - "./docker/dynamodb/data:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
  minio:
    command: "server /data --console-address \":9001\""
    image: "minio/minio:latest"
    container_name: minio
    # environment:
    #   MINIO_ROOT_USER: minioadmin
    #   MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - "./docker/minio/data:/data"
  externalproxy:
    image: "nginx:latest"
    container_name: externalproxy
    ports: 
      - "5000:5000"
    volumes:
      - "./config/nginx/externalproxy/nginx.conf:/etc/nginx/nginx.conf:ro"
    depends_on:
      - frontend
      - recommendation1
      - recommendation2
    links:
      - "frontend"
      - "recommendation1"
      - "recommendation2"
  internalproxy:
    image: "nginx:latest"
    container_name: internalproxy
    ports: 
      - "5001:5000"
    volumes:
      - "./config/nginx/internalproxy/nginx.conf:/etc/nginx/nginx.conf:ro"
    depends_on:
      - projection
      - ingestion1
      - ingestion2
    links:
      - "projection"
      - "ingestion1"
      - "ingestion2"
  frontend:
    build:
      context: .
      dockerfile: config/frontend/Dockerfile
    container_name: frontend
    volumes:
      - ./app/frontend:/reviewers-like-you
    depends_on:
      - recommendation1
      - recommendation2
    links:
      - "recommendation1"
      - "recommendation2"
  scraper:
    container_name: scraper
    environment:
      AWS_ACCESS_KEY_ID: fakeKeyId
      AWS_SECRET_ACCESS_KEY: fakeAccessKey
      AWS_DEFAULT_REGION: us-west-2
    depends_on:
      - dynamodb-local
    links:
      - "dynamodb-local"
    build:
      context: .
      dockerfile: config/scraper/Dockerfile
    volumes:
      - .:/reviewers-like-you
  ingestion1:
    container_name: ingestion1
    environment:
      AWS_ACCESS_KEY_ID: fakeKeyId
      AWS_SECRET_ACCESS_KEY: fakeAccessKey
      AWS_DEFAULT_REGION: us-west-2
    depends_on:
      - dynamodb-local
    links:
      - "dynamodb-local"
    build:
      context: .
      dockerfile: config/ingestion/Dockerfile
  ingestion2:
    container_name: ingestion2
    environment:
      AWS_ACCESS_KEY_ID: fakeKeyId
      AWS_SECRET_ACCESS_KEY: fakeAccessKey
      AWS_DEFAULT_REGION: us-west-2
    depends_on:
      - dynamodb-local
    links:
      - "dynamodb-local"
    build:
      context: .
      dockerfile: config/ingestion/Dockerfile
  projection:
    container_name: projection
    environment:
      AWS_ACCESS_KEY_ID: fakeKeyId
      AWS_SECRET_ACCESS_KEY: fakeAccessKey
      AWS_DEFAULT_REGION: us-west-2
    depends_on:
      - dynamodb-local
      - minio
    links:
      - "dynamodb-local"
      - "minio"
    build:
      context: .
      dockerfile: config/projection/Dockerfile
    volumes:
      - .:/reviewers-like-you'
  movies:
    container_name: movies
    environment:
      AWS_ACCESS_KEY_ID: fakeKeyId
      AWS_SECRET_ACCESS_KEY: fakeAccessKey
      AWS_DEFAULT_REGION: us-west-2
    depends_on:
      - minio
    links:
      - "minio"
    build:
      context: .
      dockerfile: config/movies/Dockerfile
    volumes:
      - .:/reviewers-like-you
  recommendation1:
    container_name: recommendation1
    environment:
      AWS_ACCESS_KEY_ID: fakeKeyId
      AWS_SECRET_ACCESS_KEY: fakeAccessKey
      AWS_DEFAULT_REGION: us-west-2
    depends_on:
      - dynamodb-local
      - minio
    links:
      - "dynamodb-local"
      - "minio"
    build:
      context: .
      dockerfile: config/recommendation/Dockerfile
    volumes:
      - .:/reviewers-like-you
  recommendation2:
    container_name: recommendation2
    environment:
      AWS_ACCESS_KEY_ID: fakeKeyId
      AWS_SECRET_ACCESS_KEY: fakeAccessKey
      AWS_DEFAULT_REGION: us-west-2
    depends_on:
      - dynamodb-local
      - minio
    links:
      - "dynamodb-local"
      - "minio"
    build:
      context: .
      dockerfile: config/recommendation/Dockerfile
    volumes:
      - .:/reviewers-like-you
    